<?xml version="1.0" encoding="utf-8"?>

<configuration>
    <appSettings>
        <!-- all env vars documented in the repo's README will work - in this
             case we're just setting up a filesystem data source but any of the
             other sources would work fine. -->
        <add key="ESP_GIS_DATA_SOURCE" value="filesystem" />
        <add key="ESP_GIS_FOLDER" value="C:\espdata" />

        <!-- this can be set to debug, info, log, warn, error -->
        <add key="ESP_GIS_LOG_LEVEL" value="log" />

        <!-- if you host ESP GIS Server as a folder within an existing site, then
             it will have a URL prefix, so instead of getting urls like:
                https://example.com/viewer
             they might look like:
                https://example.com/path/to/app/viewer
                
             In that case, you should set ESP_GIS_URL_PREFIX to /path/to/app
             
             Alternatively, if you're hosting the server at a top-level path,
             then this value should be set to an empty string. -->
        <add key="ESP_GIS_URL_PREFIX" value="/esp-gis-server" />

        <!-- If you're hosting under https instead of http, you should uncomment
             the below setting. -->
        <!-- <add key="ESP_GIS_PROTOCOL" value="https" /> -->
    </appSettings>
    <system.webServer>
        <!-- Remove the modules element if running on IIS 8.5-->
        <modules runAllManagedModulesForAllRequests="false"/>
        <httpErrors existingReponse="PassThrough"></httpErrors>

        <iisnode node_env="%node_env%"
                 nodeProcessCountPerApplication="1"
                 maxConcurrentRequestsPerProcess="1024"
                 maxNamedPipeConnectionRetry="100"
                 namedPipeConnectionRetryDelay="250"
                 maxNamedPipeConnectionPoolSize="512"
                 maxNamedPipePooledConnectionAge="30000"
                 asyncCompletionThreadCount="0"
                 initialRequestBufferSize="4096"
                 maxRequestBufferSize="65536"
                 uncFileChangesPollingInterval="5000"
                 gracefulShutdownTimeout="60000"
                 loggingEnabled="true"
                 logDirectory="iisnode"
                 debuggingEnabled="true"
                 debugHeaderEnabled="false"
                 debuggerPortRange="5058-6058"
                 debuggerPathSegment="debug"
                 maxLogFileSizeInKB="128"
                 maxTotalLogFileSizeInKB="1024"
                 maxLogFiles="20"
                 devErrorsEnabled="true"
                 flushResponse="false"
                 enableXFF="false"
                 promoteServerVars=""
                 configOverrides="iisnode.yml"
                 watchedFiles="web.config;*.js"
                 nodeProcessCommandLine="C:\Program Files\nodejs\node.exe"/>
                 
        <!-- 
            Before the handlers element can work on IIS 8.5
            follow steps listed here https://github.com/tjanczuk/iisnode/issues/52 
        -->                 
        <handlers>
            <add name="iisnode" path="run-iis.cjs" verb="*" modules="iisnode"/>
        </handlers>

        <rewrite>
            <rules>
                <!-- Don't interfere with requests for node-inspector debugging -->
                <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
                    <match url="^run-iis.cjs\/debug[\/]?"/>
                </rule>
                <!-- All other URLs are mapped to the Node.js application entry point -->
                <rule name="DynamicContent">
                    <conditions>
                        <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
                    </conditions>
                    <action type="Rewrite" url="run-iis.cjs"/>
                </rule>
            </rules>
        </rewrite>
        <directoryBrowse enabled="false"/>
    </system.webServer>
</configuration>